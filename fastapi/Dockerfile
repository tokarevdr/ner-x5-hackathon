    FROM python:3.12
    
    WORKDIR /app

    # Install uv
    # Ref: https://docs.astral.sh/uv/guides/integration/docker/#installing-uv
    COPY --from=ghcr.io/astral-sh/uv:0.5.11 /uv /uvx /bin/

    # Place executables in the environment at the front of the path
    # Ref: https://docs.astral.sh/uv/guides/integration/docker/#using-the-environment
    ENV PATH="/app/.venv/bin:$PATH"

    ENV CONFIGURATION=Release
    # Compile bytecode
    # Ref: https://docs.astral.sh/uv/guides/integration/docker/#compiling-bytecode
    ENV UV_COMPILE_BYTECODE=1

    # uv Cache
    # Ref: https://docs.astral.sh/uv/guides/integration/docker/#caching
    ENV UV_LINK_MODE=copy

    # Install dependencies
    # Ref: https://docs.astral.sh/uv/guides/integration/docker/#intermediate-layers
    RUN --mount=type=cache,target=/root/.cache/uv \
        --mount=type=bind,source=fastapi/uv.lock,target=uv.lock \
        --mount=type=bind,source=fastapi/pyproject.toml,target=pyproject.toml \
        uv sync --frozen --no-install-project

    ENV PYTHONPATH=/app

    COPY fastapi/pyproject.toml fastapi/uv.lock /app/
    COPY ModelIntegration/model /app/app/model
    COPY fastapi/app /app/app

    # Sync the project
    # Ref: https://docs.astral.sh/uv/guides/integration/docker/#intermediate-layers
    RUN --mount=type=cache,target=/root/.cache/uv \
        uv sync

    CMD ["fastapi", "run", "--workers", "4", "app/main.py"]